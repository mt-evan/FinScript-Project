Program: 
    statements*=Statement
;

Statement:
    Output | Assignment | IfStatement | ForLoop | WhileLoop
;

IfStatement:
    'if' '(' condition=Expression ')' '{' thenBody+=Statement* '}' 
    (elifClauses+=ElifClause)*
    ('else' '{' elseBody+=Statement* '}')?
;

ElifClause:
    'elif' '(' condition=Expression ')' '{' body+=Statement* '}'
;

ForLoop:
    'for' '(' var=ID '<-' start=Expression 'to' end=Expression ')' '{' body+=Statement* '}'
;

WhileLoop:
    'while' '(' condition=Expression ')' '{' body+=Statement* '}'
;

Output:
    PrintString | Print
;

PrintString:
    'print' '(' content=STRING ')'
;

Print:
    'print' '(' content=ID ')'
;

Assignment:
    Declaration | Reassignment
;

Declaration:
    'let' var=ID '<-' expr=Expression
;

Reassignment:
    var=ID '<-' expr=Expression
;

Expression:
    BooleanExpression
;

BooleanExpression:
    BooleanTerm ('||' BooleanTerm)*
;

BooleanTerm:
    Comparison ('&&' Comparison)*
;

Comparison:
    Sum (('==' | '!=' | '<' | '>' | '<=' | '>=') Sum)?
;

Sum:
    Product (('+' | '-' | '%') Product)*
;

Product:
    Value (('*' | '/') Value)*
;

Value:
    BOOL | INT | ID | '(' Expression ')'
;

BOOL: 'true' | 'false';

Comment:
    /\/\/.*$/
;
